<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springboot.mapper.TaskMapper" >

    <resultMap id="BaseResultMap" type="com.springboot.domain.Task" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="task_number" property="taskNumber" jdbcType="VARCHAR" />
        <result column="task_name" property="taskName" jdbcType="VARCHAR" />
        <result column="start_time" property="startTime" typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler"/>
        <result column="start_unit" property="startUnit" jdbcType="VARCHAR" />
        <result column="task_source" property="taskSource" jdbcType="VARCHAR" />
        <result column="due_time" property="dueTime" typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler" />

        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="create_by" property="createBy" jdbcType="VARCHAR" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="TaskResultMap" type="com.springboot.model.TaskModel" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="task_number" property="taskNumber" jdbcType="VARCHAR" />
        <result column="task_name" property="taskName" jdbcType="VARCHAR" />
        <result column="start_time" property="startTime" typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler"/>
        <result column="start_unit" property="startUnit" jdbcType="VARCHAR" />
        <result column="task_source" property="taskSource" jdbcType="VARCHAR" />
        <result column="due_time" property="dueTime" typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler" />

        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="create_by" property="createBy" jdbcType="VARCHAR" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        t.task_number, t.task_name, t.start_time, t.task_source, t.due_time, t.create_time, t.create_by, t.update_time, t.update_by
    </sql>

    <sql id="TaskPage">
        tc.id,
        t.task_number,
        t.task_name,
        e.enterprise_name,
        tc.check_region,
        tc.related_clues,
        e.disposal_stage,
        tc.assignment,
        tc.check_status,
        t.start_time,
        tc.expire_time,
        IF(tc.expire_time != null,
            case tc.check_status
            when 'CHECKED' then 0
            else tc.expire_time &lt; now() end, 0) as overdue,
        tc.enable
    </sql>

    <sql id="TaskExport">
        tc.check_region AS checkRegion,
        tc.related_clues AS relatedClues,
        tc.check_status AS checkStatus,
        tc.overdue,
        tc.assignment,
        tc.area_id AS areaId,
        DATE_FORMAT(tc.expire_time,'%Y-%m-%d') AS expireTime,
        e.enterprise_name AS enterpriseName,
        UNIX_TIMESTAMP(e.established_time) AS establishedTime,
        e.management_status AS managementStatus,
        e.legal_person AS legalPerson,
        e.registration_amount AS registrationAmount,
        e.registration_address AS registrationAddress,
        e.registration_number AS registrationNumber,
        e.judicial_case AS judicialCase,
        e.case_place AS casePlace,
        DATE_FORMAT(e.case_time,'%Y-%m-%d') AS caseTime,
        e.industry,
        e.business_address AS businessAddress,
        e.punishment,
        e.risk_level AS riskLevel,
        e.disposal_stage AS disposalStage,
        t.task_number AS taskNumber,
        t.task_name AS taskName,
        DATE_FORMAT(t.start_time,'%Y-%m-%d') AS startTime,
        td.involve_people AS involvePeople,
        td.money,
        td.employees_number AS employeesNumber,
        td.fund_raising_mode AS fundRaisingMode,
        td.outstanding_fund AS outstandingFund,
        td.withdrawal_fund AS withdrawalFund,
        td.involve_internet AS involveInternet,
        td.regional_scale AS regionalScale,
        td.involve_area AS involveArea,
        td.risk_details AS riskDetails,
        DATE_FORMAT(td.warn_interview_time,'%Y-%m-%d') AS warnInterviewTime,
        DATE_FORMAT(td.order_rectification_time,'%Y-%m-%d') AS orderRectificationTime,
        DATE_FORMAT(td.stop_rectification_time,'%Y-%m-%d') AS stopRectificationTime,
        DATE_FORMAT(td.freezing_funds_time,'%Y-%m-%d') AS freezingFundsTime,
        DATE_FORMAT(td.other_time,'%Y-%m-%d') AS otherTime
    </sql>

    <select id="findPageTasks" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from tasks t
    </select>

    <select id="pageTasks" resultType="com.springboot.model.TaskModel">
        SELECT <include refid="TaskPage"/>
        FROM task_checks tc
        LEFT JOIN tasks t ON tc.task_id = t.id
        LEFT JOIN task_dispositions td ON td.task_check_id = tc.id
        LEFT JOIN enterprises e ON tc.enterprise_id = e.id
        WHERE tc.enable = 'Y'
        and tc.area_id in
        <foreach collection="areaIds" item="id" index="i" open="(" close=")" separator=",">
            #{id}
        </foreach>
        <if test="disposalStage!=null and disposalStage!=''">
            AND e.disposal_stage = #{disposalStage}
        </if>
        <if test="taskTimeStart != null">
            AND t.start_time &gt;= #{taskTimeStart}' 00:00:00'
        </if>
        <if test="taskTimeEnd != null">
            AND t.start_time &lt;= #{taskTimeEnd}' 23:59:59'
        </if>
        <if test="overdue != null and 'false'.toString() == overdue.toString()">
            AND (tc.check_status = 'CHECKED' or tc.expire_time is null or tc.expire_time &gt;= now())
        </if>
        <if test="overdue != null and 'true'.toString() == overdue.toString()">
            AND (tc.check_status != 'CHECKED' AND tc.expire_time is not null AND tc.expire_time &lt; now())
        </if>
        <if test="taskExpireStart != null">
            AND tc.expire_time &gt;= #{taskExpireStart}' 00:00:00'
        </if>
        <if test="taskExpireEnd != null">
            AND tc.expire_time &lt;= #{taskExpireEnd}' 23:59:59'
        </if>
        <if test="enterpriseName!=null and enterpriseName!=''">
            AND e.enterprise_name like '%${enterpriseName}%'
        </if>
        <if test="checkStatus!=null and checkStatus!=''">
            AND tc.check_status = #{checkStatus}
        </if>
        <if test="assignment!=null and assignment!=''">
            AND tc.assignment = #{assignment}
        </if>
        <!--
        <if test="areaId!=null and areaId!=''">
            AND tc.area_id = #{areaId}
        </if>
        -->
    </select>

    <select id="listTaskByIds" parameterType="java.util.List" resultType="com.springboot.model.TaskExportModel">
        SELECT <include refid="TaskExport"/>
        FROM task_checks tc
        LEFT JOIN enterprises e ON tc.enterprise_id = e.id
        LEFT JOIN tasks t ON t.id = tc.task_id
        LEFT JOIN task_dispositions td ON tc.id = td.task_check_id
        WHERE tc.enable = 'Y'
        and tc.id IN
        <foreach collection="ids" separator="," open="(" close=")" item="id" index="index">
            #{id}
        </foreach>
    </select>

    <select id="pendingOverdueList" parameterType="List" resultType="Integer">
        SELECT
        count(*)
        FROM
        task_checks
        WHERE enable = 'Y'
        AND (check_status = 'WAITING_CHECK'
        OR check_status = 'CHECKING')
        AND expire_time IS NOT NULL
        AND expire_time &lt; NOW()
        AND area_id in
        <foreach collection="areaIds" index="index" item="areaId" open="(" close=")" separator=",">
            <if test="areaId != null">
                #{areaId}
            </if>
        </foreach>
    </select>

    <select id="pendingToCheckList" parameterType="List" resultType="Integer">
        SELECT
        count(*)
        FROM
        task_checks
        WHERE enable = 'Y'
        AND check_status = 'WAITING_CHECK'
        AND area_id in
        <foreach collection="areaIds" index="index" item="areaId" open="(" close=")" separator=",">
            <if test="areaId != null">
                #{areaId}
            </if>
        </foreach>
    </select>

    <select id="getInformGraphList" resultType="com.springboot.model.TaskGraphModel">
        select tc.area_id, tc.check_status, count(1) as count
        from task_checks tc
        left join tasks t on t.id = tc.task_id
        where tc.enable = 'Y'
        <if test="startDate != null">
            AND t.start_time &gt;= '${startDate}'
        </if>
        <if test="endDate != null">
            AND t.start_time &lt;= '${endDate}'
        </if>
        and tc.area_id IN
        <foreach collection="areaIds" separator="," open="(" close=")" item="areaId" index="index">
            #{areaId}
        </foreach>
        GROUP BY tc.area_id ,tc.check_status
    </select>
</mapper>